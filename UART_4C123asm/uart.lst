


ARM Macro Assembler    Page 1 


    1 00000000         ; UART.s
    2 00000000         ; Runs on LM4F120/TM4C123
    3 00000000         ; Use UART0 to implement bidirectional data transfer to 
                       and from a
    4 00000000         ; computer running HyperTerminal.  This time, interrupts
                        and FIFOs
    5 00000000         ; are used.
    6 00000000         ; This file is named "UART2" because it is the second UA
                       RT example.
    7 00000000         ; It is not related to the UART2 module on the microcont
                       roller.
    8 00000000         ; Daniel Valvano
    9 00000000         ; September 12, 2013
   10 00000000         
   11 00000000         ;  This example accompanies the book
   12 00000000         ;  "Embedded Systems: Real Time Interfacing to Arm Corte
                       x M Microcontrollers",
   13 00000000         ;  ISBN: 978-1463590154, Jonathan Valvano, copyright (c)
                        2018
   14 00000000         ;  Program 5.11 Section 5.6, Program 3.10
   15 00000000         ;
   16 00000000         ;Copyright 2018 by Jonathan W. Valvano, valvano@mail.ute
                       xas.edu
   17 00000000         ;   You may use, edit, run or distribute this file
   18 00000000         ;   as long as the above copyright notice remains
   19 00000000         ;THIS SOFTWARE IS PROVIDED "AS IS".  NO WARRANTIES, WHET
                       HER EXPRESS, IMPLIED
   20 00000000         ;OR STATUTORY, INCLUDING, BUT NOT LIMITED TO, IMPLIED WA
                       RRANTIES OF
   21 00000000         ;MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE AP
                       PLY TO THIS SOFTWARE.
   22 00000000         ;VALVANO SHALL NOT, IN ANY CIRCUMSTANCES, BE LIABLE FOR 
                       SPECIAL, INCIDENTAL,
   23 00000000         ;OR CONSEQUENTIAL DAMAGES, FOR ANY REASON WHATSOEVER.
   24 00000000         ;For more information about my classes, my research, and
                        my books, see
   25 00000000         ;http://users.ece.utexas.edu/~valvano/
   26 00000000         
   27 00000000         ; U0Rx (VCP receive) connected to PA0
   28 00000000         ; U0Tx (VCP transmit) connected to PA1
   29 00000000         
   30 00000000 00000020 
                       NVIC_EN0_INT5
                               EQU              0x00000020  ; Interrupt 5 enabl
                                                            e
   31 00000000 E000E100 
                       NVIC_EN0_R
                               EQU              0xE000E100  ; IRQ 0 to 31 Set E
                                                            nable Register
   32 00000000 E000E404 
                       NVIC_PRI1_R
                               EQU              0xE000E404  ; IRQ 4 to 7 Priori
                                                            ty Register
   33 00000000 40004420 
                       GPIO_PORTA_AFSEL_R
                               EQU              0x40004420
   34 00000000 4000451C 
                       GPIO_PORTA_DEN_R
                               EQU              0x4000451C



ARM Macro Assembler    Page 2 


   35 00000000 40004528 
                       GPIO_PORTA_AMSEL_R
                               EQU              0x40004528
   36 00000000 4000452C 
                       GPIO_PORTA_PCTL_R
                               EQU              0x4000452C
   37 00000000 4000C000 
                       UART0_DR_R
                               EQU              0x4000C000
   38 00000000 4000C018 
                       UART0_FR_R
                               EQU              0x4000C018
   39 00000000 4000C024 
                       UART0_IBRD_R
                               EQU              0x4000C024
   40 00000000 4000C028 
                       UART0_FBRD_R
                               EQU              0x4000C028
   41 00000000 4000C02C 
                       UART0_LCRH_R
                               EQU              0x4000C02C
   42 00000000 4000C030 
                       UART0_CTL_R
                               EQU              0x4000C030
   43 00000000 4000C034 
                       UART0_IFLS_R
                               EQU              0x4000C034
   44 00000000 4000C038 
                       UART0_IM_R
                               EQU              0x4000C038
   45 00000000 4000C03C 
                       UART0_RIS_R
                               EQU              0x4000C03C
   46 00000000 4000C044 
                       UART0_ICR_R
                               EQU              0x4000C044
   47 00000000 00000040 
                       UART_FR_RXFF
                               EQU              0x00000040  ; UART Receive FIFO
                                                             Full
   48 00000000 00000020 
                       UART_FR_TXFF
                               EQU              0x00000020  ; UART Transmit FIF
                                                            O Full
   49 00000000 00000010 
                       UART_FR_RXFE
                               EQU              0x00000010  ; UART Receive FIFO
                                                             Empty
   50 00000000 00000060 
                       UART_LCRH_WLEN_8
                               EQU              0x00000060  ; 8 bit word length
                                                            
   51 00000000 00000010 
                       UART_LCRH_FEN
                               EQU              0x00000010  ; UART Enable FIFOs
                                                            
   52 00000000 00000001 
                       UART_CTL_UARTEN
                               EQU              0x00000001  ; UART Enable



ARM Macro Assembler    Page 3 


   53 00000000 00000000 
                       UART_IFLS_RX1_8
                               EQU              0x00000000  ; RX FIFO >= 1/8 fu
                                                            ll
   54 00000000 00000000 
                       UART_IFLS_TX1_8
                               EQU              0x00000000  ; TX FIFO <= 1/8 fu
                                                            ll
   55 00000000 00000040 
                       UART_IM_RTIM
                               EQU              0x00000040  ; UART Receive Time
                                                            -Out Interrupt
   56 00000000         ; Mask
   57 00000000 00000020 
                       UART_IM_TXIM
                               EQU              0x00000020  ; UART Transmit Int
                                                            errupt Mask
   58 00000000 00000010 
                       UART_IM_RXIM
                               EQU              0x00000010  ; UART Receive Inte
                                                            rrupt Mask
   59 00000000 00000040 
                       UART_RIS_RTRIS
                               EQU              0x00000040  ; UART Receive Time
                                                            -Out Raw
   60 00000000         ; Interrupt Status
   61 00000000 00000020 
                       UART_RIS_TXRIS
                               EQU              0x00000020  ; UART Transmit Raw
                                                             Interrupt
   62 00000000         ; Status
   63 00000000 00000010 
                       UART_RIS_RXRIS
                               EQU              0x00000010  ; UART Receive Raw 
                                                            Interrupt
   64 00000000         ; Status
   65 00000000 00000040 
                       UART_ICR_RTIC
                               EQU              0x00000040  ; Receive Time-Out 
                                                            Interrupt Clear
   66 00000000 00000020 
                       UART_ICR_TXIC
                               EQU              0x00000020  ; Transmit Interrup
                                                            t Clear
   67 00000000 00000010 
                       UART_ICR_RXIC
                               EQU              0x00000010  ; Receive Interrupt
                                                             Clear
   68 00000000 400FE608 
                       SYSCTL_RCGCGPIO_R
                               EQU              0x400FE608
   69 00000000 400FE618 
                       SYSCTL_RCGCUART_R
                               EQU              0x400FE618
   70 00000000         
   71 00000000                 IMPORT           DisableInterrupts ; Disable int
                                                            errupts
   72 00000000                 IMPORT           EnableInterrupts 
                                                            ; Enable interrupts



ARM Macro Assembler    Page 4 


                                                            
   73 00000000                 IMPORT           StartCritical ; previous I bit,
                                                             disable interrupts
                                                            
   74 00000000                 IMPORT           EndCritical ; restore I bit to 
                                                            previous value
   75 00000000                 IMPORT           WaitForInterrupt 
                                                            ; low power mode
   76 00000000         
   77 00000000         
   78 00000000         ; standard ASCII symbols
   79 00000000 0000000D 
                       CR      EQU              0x0D
   80 00000000 0000000A 
                       LF      EQU              0x0A
   81 00000000 00000008 
                       BS      EQU              0x08
   82 00000000 0000001B 
                       ESC     EQU              0x1B
   83 00000000 00000020 
                       SPA     EQU              0x20
   84 00000000 0000007F 
                       DEL     EQU              0x7F
   85 00000000         
   86 00000000                 AREA             |.text|, CODE, READONLY, ALIGN=
2
   87 00000000                 THUMB
   88 00000000                 EXPORT           UART_Init
   89 00000000                 EXPORT           UART_InChar
   90 00000000                 EXPORT           UART_OutChar
   91 00000000         
   92 00000000         ; require C function calls to preserve the 8-byte alignm
                       ent of 8-byte data objects
   93 00000000                 PRESERVE8
   94 00000000         
   95 00000000         ;------------UART_Init------------
   96 00000000         ; Initialize UART0
   97 00000000         ; Baud rate is 115200 bits/sec
   98 00000000         ; Input: none
   99 00000000         ; Output: none
  100 00000000         ; Modifies: R0, R1
  101 00000000         ; Assumes: 50 MHz system clock
  102 00000000         UART_Init
  103 00000000 B500            PUSH             {LR}        ; save current valu
                                                            e of LR
  104 00000002         ; activate clock for UART0
  105 00000002 4924            LDR              R1, =SYSCTL_RCGCUART_R ; R1 = &
                                                            SYSCTL_RCGCUART_R
  106 00000004 6808            LDR              R0, [R1]    ; R0 = [R1]
  107 00000006 F040 0001       ORR              R0, R0, #0x01 ; enable UART0
  108 0000000A 6008            STR              R0, [R1]    ; [R1] = R0
  109 0000000C         ; activate clock for port A
  110 0000000C 4922            LDR              R1, =SYSCTL_RCGCGPIO_R ; R1 = &
                                                            SYSCTL_RCGCGPIO_R
  111 0000000E 6808            LDR              R0, [R1]    ; R0 = [R1]
  112 00000010 F040 0001       ORR              R0, R0, #0x01 ; enable Port A
  113 00000014 6008            STR              R0, [R1]    ; [R1] = R0
  114 00000016         
  115 00000016         ; disable UART



ARM Macro Assembler    Page 5 


  116 00000016 4921            LDR              R1, =UART0_CTL_R 
                                                            ; R1 = &UART0_CTL_R
                                                            
  117 00000018 6808            LDR              R0, [R1]    ; R0 = [R1]
  118 0000001A F020 0001       BIC              R0, R0, #UART_CTL_UARTEN ; R0 =
                                                             R0&~UART_CTL_UARTE
                                                            N (disable UART)
  119 0000001E 6008            STR              R0, [R1]    ; [R1] = R0
  120 00000020         ; set the baud rate (equations on p845 of datasheet)
  121 00000020 491F            LDR              R1, =UART0_IBRD_R ; R1 = &UART0
                                                            _IBRD_R
  122 00000022 F04F 001B       MOV              R0, #27     ; R0 = IBRD = int(5
                                                            0,000,000 / (16 * 1
                                                            15,200)) = int(27.1
                                                            267)
  123 00000026 6008            STR              R0, [R1]    ; [R1] = R0
  124 00000028 491E            LDR              R1, =UART0_FBRD_R ; R1 = &UART0
                                                            _FBRD_R
  125 0000002A F04F 0008       MOV              R0, #8      ; R0 = FBRD = int(0
                                                            .1267 * 64 + 0.5) =
                                                             8
  126 0000002E 6008            STR              R0, [R1]    ; [R1] = R0
  127 00000030         ; configure Line Control Register settings
  128 00000030 491D            LDR              R1, =UART0_LCRH_R ; R1 = &UART0
                                                            _LCRH_R
  129 00000032 6808            LDR              R0, [R1]    ; R0 = [R1]
  130 00000034 F020 00FF       BIC              R0, R0, #0xFF ; R0 = R0&~0xFF (
                                                            clear all fields)
  131 00000038         ; 8 bit word length, no parity bits, one stop bit, FIFOs
                       
  132 00000038 F100 0070       ADD              R0, R0, #(UART_LCRH_WLEN_8+UART
_LCRH_FEN)
  133 0000003C 6008            STR              R0, [R1]    ; [R1] = R0
  134 0000003E         ; enable UART
  135 0000003E 4917            LDR              R1, =UART0_CTL_R 
                                                            ; R1 = &UART0_CTL_R
                                                            
  136 00000040 6808            LDR              R0, [R1]    ; R0 = [R1]
  137 00000042 F040 0001       ORR              R0, R0, #UART_CTL_UARTEN ; R0 =
                                                             R0|UART_CTL_UARTEN
                                                             (enable UART)
  138 00000046 6008            STR              R0, [R1]    ; [R1] = R0
  139 00000048         ; enable alternate function
  140 00000048 4918            LDR              R1, =GPIO_PORTA_AFSEL_R ; R1 = 
                                                            &GPIO_PORTA_AFSEL_R
                                                            
  141 0000004A 6808            LDR              R0, [R1]    ; R0 = [R1]
  142 0000004C F040 0003       ORR              R0, R0, #0x03 ; R0 = R0|0x03 (e
                                                            nable alt funct on 
                                                            PA1-0)
  143 00000050 6008            STR              R0, [R1]    ; [R1] = R0
  144 00000052         ; enable digital port
  145 00000052 4917            LDR              R1, =GPIO_PORTA_DEN_R ; R1 = &G
                                                            PIO_PORTA_DEN_R
  146 00000054 6808            LDR              R0, [R1]    ; R0 = [R1]
  147 00000056 F040 0003       ORR              R0, R0, #0x03 ; R0 = R0|0x03 (e
                                                            nable digital I/O o
                                                            n PA1-0)
  148 0000005A 6008            STR              R0, [R1]    ; [R1] = R0



ARM Macro Assembler    Page 6 


  149 0000005C         ; configure as UART
  150 0000005C 4915            LDR              R1, =GPIO_PORTA_PCTL_R ; R1 = &
                                                            GPIO_PORTA_PCTL_R
  151 0000005E 6808            LDR              R0, [R1]    ; R0 = [R1]
  152 00000060 F020 00FF       BIC              R0, R0, #0x000000FF ; R0 = R0&~
                                                            0x000000FF (clear p
                                                            ort control field f
                                                            or PA1-0)
  153 00000064 F100 0011       ADD              R0, R0, #0x00000011 ; R0 = R0+0
                                                            x00000011 (configur
                                                            e PA1-0 as UART)
  154 00000068 6008            STR              R0, [R1]    ; [R1] = R0
  155 0000006A         ; disable analog functionality
  156 0000006A 4913            LDR              R1, =GPIO_PORTA_AMSEL_R ; R1 = 
                                                            &GPIO_PORTA_AMSEL_R
                                                            
  157 0000006C F04F 0000       MOV              R0, #0      ; R0 = 0 (disable a
                                                            nalog functionality
                                                             on PA)
  158 00000070 6008            STR              R0, [R1]    ; [R1] = R0
  159 00000072         
  160 00000072 BD00            POP              {PC}        ; restore previous 
                                                            value of LR into PC
                                                             (return)
  161 00000074         
  162 00000074         
  163 00000074         ;------------UART_InChar------------
  164 00000074         ; input ASCII character from UART
  165 00000074         ; spin if no data available i
  166 00000074         ; Input: none
  167 00000074         ; Output: R0  character in from UART
  168 00000074         UART_InChar
  169 00000074 4911            LDR              R1,=UART0_FR_R
  170 00000076 680A    InLoop  LDR              R2,[R1]     ; read FR
  171 00000078 F012 0210       ANDS             R2,#0x0010
  172 0000007C D1FB            BNE              InLoop      ; wait until RXFE i
                                                            s 0
  173 0000007E 4910            LDR              R1,=UART0_DR_R
  174 00000080 6808            LDR              R0,[R1]     ; read DR
  175 00000082 4770            BX               LR
  176 00000084         
  177 00000084         
  178 00000084         ;------------UART_OutChar------------
  179 00000084         ; output ASCII character to UART
  180 00000084         ; spin if UART transmit FIFO is full
  181 00000084         ; Input: R0  character out to UART
  182 00000084         ; Output: none
  183 00000084         ; Modifies: R0, R1
  184 00000084         
  185 00000084         UART_OutChar
  186 00000084 490D            LDR              R1,=UART0_FR_R
  187 00000086 680A    OLoop   LDR              R2,[R1]     ; read FR
  188 00000088 F012 0220       ANDS             R2,#0x0020
  189 0000008C D1FB            BNE              OLoop       ; wait until TXFF i
                                                            s 0
  190 0000008E 490C            LDR              R1,=UART0_DR_R
  191 00000090 6008            STR              R0,[R1]     ; write DR
  192 00000092 4770            BX               LR
  193 00000094         



ARM Macro Assembler    Page 7 


  194 00000094         
  195 00000094                 ALIGN                        ; make sure the end
                                                             of this section is
                                                             aligned
  196 00000094                 END                          ; end of file
              400FE618 
              400FE608 
              4000C030 
              4000C024 
              4000C028 
              4000C02C 
              40004420 
              4000451C 
              4000452C 
              40004528 
              4000C018 
              4000C000 
Command Line: --debug --xref --diag_suppress=9931,A1950W --cpu=Cortex-M4 --fpu=
SoftVFP --depend=.\uart.d -o.\uart.o -I.\RTE\_UARTInts -IC:\Users\ADMIN\AppData
\Local\Arm\Packs\ARM\CMSIS\5.9.0\CMSIS\Core\Include -IC:\Users\ADMIN\AppData\Lo
cal\Arm\Packs\Keil\TM4C_DFP\1.1.0\Device\Include\TM4C123 --predefine="__EVAL SE
TA 1" --predefine="__UVISION_VERSION SETA 538" --predefine="_RTE_ SETA 1" --pre
define="TM4C123GH6PM SETA 1" --predefine="_RTE_ SETA 1" --list=.\uart.lst UART.
s



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

.text 00000000

Symbol: .text
   Definitions
      At line 86 in file UART.s
   Uses
      None
Comment: .text unused
InLoop 00000076

Symbol: InLoop
   Definitions
      At line 170 in file UART.s
   Uses
      At line 172 in file UART.s
Comment: InLoop used once
OLoop 00000086

Symbol: OLoop
   Definitions
      At line 187 in file UART.s
   Uses
      At line 189 in file UART.s
Comment: OLoop used once
UART_InChar 00000074

Symbol: UART_InChar
   Definitions
      At line 168 in file UART.s
   Uses
      At line 89 in file UART.s
Comment: UART_InChar used once
UART_Init 00000000

Symbol: UART_Init
   Definitions
      At line 102 in file UART.s
   Uses
      At line 88 in file UART.s
Comment: UART_Init used once
UART_OutChar 00000084

Symbol: UART_OutChar
   Definitions
      At line 185 in file UART.s
   Uses
      At line 90 in file UART.s
Comment: UART_OutChar used once
6 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Absolute symbols

BS 00000008

Symbol: BS
   Definitions
      At line 81 in file UART.s
   Uses
      None
Comment: BS unused
CR 0000000D

Symbol: CR
   Definitions
      At line 79 in file UART.s
   Uses
      None
Comment: CR unused
DEL 0000007F

Symbol: DEL
   Definitions
      At line 84 in file UART.s
   Uses
      None
Comment: DEL unused
ESC 0000001B

Symbol: ESC
   Definitions
      At line 82 in file UART.s
   Uses
      None
Comment: ESC unused
GPIO_PORTA_AFSEL_R 40004420

Symbol: GPIO_PORTA_AFSEL_R
   Definitions
      At line 33 in file UART.s
   Uses
      At line 140 in file UART.s
Comment: GPIO_PORTA_AFSEL_R used once
GPIO_PORTA_AMSEL_R 40004528

Symbol: GPIO_PORTA_AMSEL_R
   Definitions
      At line 35 in file UART.s
   Uses
      At line 156 in file UART.s
Comment: GPIO_PORTA_AMSEL_R used once
GPIO_PORTA_DEN_R 4000451C

Symbol: GPIO_PORTA_DEN_R
   Definitions
      At line 34 in file UART.s
   Uses
      At line 145 in file UART.s
Comment: GPIO_PORTA_DEN_R used once
GPIO_PORTA_PCTL_R 4000452C

Symbol: GPIO_PORTA_PCTL_R



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Absolute symbols

   Definitions
      At line 36 in file UART.s
   Uses
      At line 150 in file UART.s
Comment: GPIO_PORTA_PCTL_R used once
LF 0000000A

Symbol: LF
   Definitions
      At line 80 in file UART.s
   Uses
      None
Comment: LF unused
NVIC_EN0_INT5 00000020

Symbol: NVIC_EN0_INT5
   Definitions
      At line 30 in file UART.s
   Uses
      None
Comment: NVIC_EN0_INT5 unused
NVIC_EN0_R E000E100

Symbol: NVIC_EN0_R
   Definitions
      At line 31 in file UART.s
   Uses
      None
Comment: NVIC_EN0_R unused
NVIC_PRI1_R E000E404

Symbol: NVIC_PRI1_R
   Definitions
      At line 32 in file UART.s
   Uses
      None
Comment: NVIC_PRI1_R unused
SPA 00000020

Symbol: SPA
   Definitions
      At line 83 in file UART.s
   Uses
      None
Comment: SPA unused
SYSCTL_RCGCGPIO_R 400FE608

Symbol: SYSCTL_RCGCGPIO_R
   Definitions
      At line 68 in file UART.s
   Uses
      At line 110 in file UART.s
Comment: SYSCTL_RCGCGPIO_R used once
SYSCTL_RCGCUART_R 400FE618

Symbol: SYSCTL_RCGCUART_R
   Definitions
      At line 69 in file UART.s
   Uses



ARM Macro Assembler    Page 3 Alphabetic symbol ordering
Absolute symbols

      At line 105 in file UART.s
Comment: SYSCTL_RCGCUART_R used once
UART0_CTL_R 4000C030

Symbol: UART0_CTL_R
   Definitions
      At line 42 in file UART.s
   Uses
      At line 116 in file UART.s
      At line 135 in file UART.s

UART0_DR_R 4000C000

Symbol: UART0_DR_R
   Definitions
      At line 37 in file UART.s
   Uses
      At line 173 in file UART.s
      At line 190 in file UART.s

UART0_FBRD_R 4000C028

Symbol: UART0_FBRD_R
   Definitions
      At line 40 in file UART.s
   Uses
      At line 124 in file UART.s
Comment: UART0_FBRD_R used once
UART0_FR_R 4000C018

Symbol: UART0_FR_R
   Definitions
      At line 38 in file UART.s
   Uses
      At line 169 in file UART.s
      At line 186 in file UART.s

UART0_IBRD_R 4000C024

Symbol: UART0_IBRD_R
   Definitions
      At line 39 in file UART.s
   Uses
      At line 121 in file UART.s
Comment: UART0_IBRD_R used once
UART0_ICR_R 4000C044

Symbol: UART0_ICR_R
   Definitions
      At line 46 in file UART.s
   Uses
      None
Comment: UART0_ICR_R unused
UART0_IFLS_R 4000C034

Symbol: UART0_IFLS_R
   Definitions
      At line 43 in file UART.s
   Uses



ARM Macro Assembler    Page 4 Alphabetic symbol ordering
Absolute symbols

      None
Comment: UART0_IFLS_R unused
UART0_IM_R 4000C038

Symbol: UART0_IM_R
   Definitions
      At line 44 in file UART.s
   Uses
      None
Comment: UART0_IM_R unused
UART0_LCRH_R 4000C02C

Symbol: UART0_LCRH_R
   Definitions
      At line 41 in file UART.s
   Uses
      At line 128 in file UART.s
Comment: UART0_LCRH_R used once
UART0_RIS_R 4000C03C

Symbol: UART0_RIS_R
   Definitions
      At line 45 in file UART.s
   Uses
      None
Comment: UART0_RIS_R unused
UART_CTL_UARTEN 00000001

Symbol: UART_CTL_UARTEN
   Definitions
      At line 52 in file UART.s
   Uses
      At line 118 in file UART.s
      At line 137 in file UART.s

UART_FR_RXFE 00000010

Symbol: UART_FR_RXFE
   Definitions
      At line 49 in file UART.s
   Uses
      None
Comment: UART_FR_RXFE unused
UART_FR_RXFF 00000040

Symbol: UART_FR_RXFF
   Definitions
      At line 47 in file UART.s
   Uses
      None
Comment: UART_FR_RXFF unused
UART_FR_TXFF 00000020

Symbol: UART_FR_TXFF
   Definitions
      At line 48 in file UART.s
   Uses
      None
Comment: UART_FR_TXFF unused



ARM Macro Assembler    Page 5 Alphabetic symbol ordering
Absolute symbols

UART_ICR_RTIC 00000040

Symbol: UART_ICR_RTIC
   Definitions
      At line 65 in file UART.s
   Uses
      None
Comment: UART_ICR_RTIC unused
UART_ICR_RXIC 00000010

Symbol: UART_ICR_RXIC
   Definitions
      At line 67 in file UART.s
   Uses
      None
Comment: UART_ICR_RXIC unused
UART_ICR_TXIC 00000020

Symbol: UART_ICR_TXIC
   Definitions
      At line 66 in file UART.s
   Uses
      None
Comment: UART_ICR_TXIC unused
UART_IFLS_RX1_8 00000000

Symbol: UART_IFLS_RX1_8
   Definitions
      At line 53 in file UART.s
   Uses
      None
Comment: UART_IFLS_RX1_8 unused
UART_IFLS_TX1_8 00000000

Symbol: UART_IFLS_TX1_8
   Definitions
      At line 54 in file UART.s
   Uses
      None
Comment: UART_IFLS_TX1_8 unused
UART_IM_RTIM 00000040

Symbol: UART_IM_RTIM
   Definitions
      At line 55 in file UART.s
   Uses
      None
Comment: UART_IM_RTIM unused
UART_IM_RXIM 00000010

Symbol: UART_IM_RXIM
   Definitions
      At line 58 in file UART.s
   Uses
      None
Comment: UART_IM_RXIM unused
UART_IM_TXIM 00000020

Symbol: UART_IM_TXIM



ARM Macro Assembler    Page 6 Alphabetic symbol ordering
Absolute symbols

   Definitions
      At line 57 in file UART.s
   Uses
      None
Comment: UART_IM_TXIM unused
UART_LCRH_FEN 00000010

Symbol: UART_LCRH_FEN
   Definitions
      At line 51 in file UART.s
   Uses
      At line 132 in file UART.s
Comment: UART_LCRH_FEN used once
UART_LCRH_WLEN_8 00000060

Symbol: UART_LCRH_WLEN_8
   Definitions
      At line 50 in file UART.s
   Uses
      At line 132 in file UART.s
Comment: UART_LCRH_WLEN_8 used once
UART_RIS_RTRIS 00000040

Symbol: UART_RIS_RTRIS
   Definitions
      At line 59 in file UART.s
   Uses
      None
Comment: UART_RIS_RTRIS unused
UART_RIS_RXRIS 00000010

Symbol: UART_RIS_RXRIS
   Definitions
      At line 63 in file UART.s
   Uses
      None
Comment: UART_RIS_RXRIS unused
UART_RIS_TXRIS 00000020

Symbol: UART_RIS_TXRIS
   Definitions
      At line 61 in file UART.s
   Uses
      None
Comment: UART_RIS_TXRIS unused
42 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
External symbols

DisableInterrupts 00000000

Symbol: DisableInterrupts
   Definitions
      At line 71 in file UART.s
   Uses
      None
Comment: DisableInterrupts unused
EnableInterrupts 00000000

Symbol: EnableInterrupts
   Definitions
      At line 72 in file UART.s
   Uses
      None
Comment: EnableInterrupts unused
EndCritical 00000000

Symbol: EndCritical
   Definitions
      At line 74 in file UART.s
   Uses
      None
Comment: EndCritical unused
StartCritical 00000000

Symbol: StartCritical
   Definitions
      At line 73 in file UART.s
   Uses
      None
Comment: StartCritical unused
WaitForInterrupt 00000000

Symbol: WaitForInterrupt
   Definitions
      At line 75 in file UART.s
   Uses
      None
Comment: WaitForInterrupt unused
5 symbols
389 symbols in table
